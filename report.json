{
  "numFailedTestSuites": 1,
  "numFailedTests": 20,
  "numPassedTestSuites": 0,
  "numPassedTests": 34,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 1,
  "numTotalTests": 54,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1609843969192,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-78.46.77.125-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-78.46.77.125-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-78.46.77.125-region",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-78.46.77.125-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-202.65.212.123-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-202.65.212.123-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"中西區\"]\u001b[39m\nReceived: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-202.65.212.123-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-202.65.212.123-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-202.65.212.123-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-202.65.212.123-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"東區\"]\u001b[39m\nReceived: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-202.65.212.123-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-202.65.212.123-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-202.65.212.123-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-202.65.212.123-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"南區\"]\u001b[39m\nReceived: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-202.65.212.123-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-202.65.212.123-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-202.65.212.123-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-202.65.212.123-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"灣仔區\"]\u001b[39m\nReceived: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-202.65.212.123-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-202.65.212.123-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-194.5.52.30-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-194.5.52.30-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"\"]\u001b[39m\nReceived: \u001b[31m[\"東埔村\", \"南投縣\", \"南投縣\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-194.5.52.30-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-194.5.52.30-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-173.239.198.96-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-173.239.198.96-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"SF\"]\u001b[39m\nReceived: \u001b[31m[\"Town of Evergreen\", \"Washburn County\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-173.239.198.96-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-173.239.198.96-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"US\"\u001b[39m\nReceived: \u001b[31m\"DK\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-104.37.31.199-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-104.37.31.199-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"NY\"]\u001b[39m\nReceived: \u001b[31m[\"Roskilde Kommune\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-104.37.31.199-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-104.37.31.199-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"US\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-193.36.225.14-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-193.36.225.14-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"LA\"]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-193.36.225.14-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-193.36.225.14-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mG\u001b[27mB\"\u001b[39m\nReceived: \u001b[31m\"B\u001b[7mE\u001b[27m\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-185.192.69.179-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-185.192.69.179-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"UK\"]\u001b[39m\nReceived: \u001b[31m[\"Loenhout\", \"Antwerpen\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-185.192.69.179-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-185.192.69.179-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"CA\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-198.144.145.21-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-198.144.145.21-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"Canada\"]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-198.144.145.21-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-198.144.145.21-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"JP\"\u001b[39m\nReceived: \u001b[31m\"NL\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-45.8.68.60-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-45.8.68.60-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"Japan\"]\u001b[39m\nReceived: \u001b[31m[\"Amsterdam\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-45.8.68.60-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-45.8.68.60-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"KR\"\u001b[39m\nReceived: \u001b[31m\"PL\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:13:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-185.92.24.3-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-185.92.24.3-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"Korea\"]\u001b[39m\nReceived: \u001b[31m[\"gmina Połczyn-Zdrój\", \"powiat białogardzki\"]\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:20:28)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-185.92.24.3-region",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-185.92.24.3-region"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.27979,114.22977-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.27979,114.22977-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.27994078,114.1643935-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.27994078,114.1643935-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.2886,114.1942-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.2886,114.1942-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.26,114.1377-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.26,114.1377-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.279909,114.173729-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.279909,114.173729-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.32888,114.1892-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.32888,114.1892-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.3233,114.2154-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.3233,114.2154-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.33023,114.15945-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.33023,114.15945-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.33066,114.192017-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.33066,114.192017-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.302219,114.174637-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.302219,114.174637-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.271574,113.996823-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.271574,113.996823-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.35288,114.10004-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.35288,114.10004-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.501257,114.127945-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.501257,114.127945-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.38333,114.26667-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.38333,114.26667-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.38333,114.18333-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.38333,114.18333-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.45007,114.16877-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.45007,114.16877-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.3699,114.1144-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.3699,114.1144-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.39175,113.97157-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.39175,113.97157-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-22.4445,114.0222-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-22.4445,114.0222-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-23.553118,121.0211024-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-23.553118,121.0211024-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"MO\"\u001b[39m\nReceived: \u001b[31m\"CN\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:31:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-22.1634178,113.5629425-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-22.1634178,113.5629425-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-37.809326,-122.409981-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-37.809326,-122.409981-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-40.712772,-74.006058-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-40.712772,-74.006058-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-33.942791,-118.410042-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-33.942791,-118.410042-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"GB\"\u001b[39m\nReceived: \u001b[31m\"UK\"\u001b[39m\n    at Object.<anonymous> (/headless/default_project/geo/providers/geocode.xyz/index.test.js:31:29)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
          ],
          "fullName": "geocode.xyz-55.3617609,-3.4433238-country",
          "location": null,
          "status": "failed",
          "title": "geocode.xyz-55.3617609,-3.4433238-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-43.65107,-79.347015-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-43.65107,-79.347015-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-37.4900318,136.4664008-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-37.4900318,136.4664008-country"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "geocode.xyz-35.8615124,127.096405-country",
          "location": null,
          "status": "passed",
          "title": "geocode.xyz-35.8615124,127.096405-country"
        }
      ],
      "endTime": 1609843969549,
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-202.65.212.123-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"中西區\"]\u001b[39m\n    Received: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-202.65.212.123-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"東區\"]\u001b[39m\n    Received: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-202.65.212.123-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"南區\"]\u001b[39m\n    Received: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-202.65.212.123-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"灣仔區\"]\u001b[39m\n    Received: \u001b[31m[\"西貢區 Sai Kung District\", \"西貢區\", \"西貢區 Sai Kung District\", \"西貢區\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-194.5.52.30-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"\"]\u001b[39m\n    Received: \u001b[31m[\"東埔村\", \"南投縣\", \"南投縣\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-173.239.198.96-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"SF\"]\u001b[39m\n    Received: \u001b[31m[\"Town of Evergreen\", \"Washburn County\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-104.37.31.199-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"US\"\u001b[39m\n    Received: \u001b[31m\"DK\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-104.37.31.199-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"NY\"]\u001b[39m\n    Received: \u001b[31m[\"Roskilde Kommune\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-193.36.225.14-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"US\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-193.36.225.14-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"LA\"]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-185.192.69.179-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mG\u001b[27mB\"\u001b[39m\n    Received: \u001b[31m\"B\u001b[7mE\u001b[27m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-185.192.69.179-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"UK\"]\u001b[39m\n    Received: \u001b[31m[\"Loenhout\", \"Antwerpen\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-198.144.145.21-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"CA\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-198.144.145.21-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"Canada\"]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-45.8.68.60-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"JP\"\u001b[39m\n    Received: \u001b[31m\"NL\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-45.8.68.60-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"Japan\"]\u001b[39m\n    Received: \u001b[31m[\"Amsterdam\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-185.92.24.3-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"KR\"\u001b[39m\n    Received: \u001b[31m\"PL\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  test(\u001b[32m`${providerName}-${ip}-region`\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:13:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-185.92.24.3-region\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"Korea\"]\u001b[39m\n    Received: \u001b[31m[\"gmina Połczyn-Zdrój\", \"powiat białogardzki\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByIp(ip)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m    expect(providerRegion)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(regions))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:20:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-22.1634178,113.5629425-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"MO\"\u001b[39m\n    Received: \u001b[31m\"CN\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByGeo({ lat\u001b[33m:\u001b[39m latlng[\u001b[35m0\u001b[39m]\u001b[33m,\u001b[39m lng\u001b[33m:\u001b[39m latlng[\u001b[35m1\u001b[39m] })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:31:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgeocode.xyz-55.3617609,-3.4433238-country\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"GB\"\u001b[39m\n    Received: \u001b[31m\"UK\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m      regions\u001b[33m:\u001b[39m providerRegion\u001b[33m,\u001b[39m country_code\u001b[33m:\u001b[39m providerCountry\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    } \u001b[33m=\u001b[39m await resolveByGeo({ lat\u001b[33m:\u001b[39m latlng[\u001b[35m0\u001b[39m]\u001b[33m,\u001b[39m lng\u001b[33m:\u001b[39m latlng[\u001b[35m1\u001b[39m] })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m    expect(providerCountry)\u001b[33m.\u001b[39mtoBe(country_code)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mproviders/geocode.xyz/index.test.js\u001b[39m\u001b[0m\u001b[2m:31:29)\u001b[22m\u001b[2m\u001b[22m\n",
      "name": "/headless/default_project/geo/providers/geocode.xyz/index.test.js",
      "startTime": 1609843969208,
      "status": "failed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}